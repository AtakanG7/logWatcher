networks:
  monitoring:
    driver: bridge
    name: monitoring
services:
  alertmanager:
    command:
    - --config.file=/etc/alertmanager/alertmanager.yml
    - --storage.path=/alertmanager
    container_name: alertmanager
    image: prom/alertmanager:latest
    networks:
    - monitoring
    ports:
    - 9093:9093
    user: root
    volumes:
    - ./config/alertmanager/alertmanager.yaml:/etc/alertmanager/alertmanager.yml
  application:
    container_name: application
    env_file: ./config/application/.env
    image: atakan1927/blog
    networks:
    - monitoring
    ports:
    - 5000:5000
  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    labels:
    - log_job=cadvisor
    networks:
    - monitoring
    ports:
    - 8080:8080
    user: root
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:ro
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /dev/disk/:/dev/disk:ro
  grafana:
    container_name: grafana
    depends_on:
    - prometheus
    - loki
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=admin
    image: grafana/grafana:latest
    labels:
    - log_job=grafana
    networks:
    - monitoring
    ports:
    - 3000:3000
    user: root
    volumes:
    - grafana-storage:/var/lib/grafana
    - ./config/grafana/provisioning:/etc/grafana/provisioning
    - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    - ./config/grafana/provisioning/dashboards/dashboards.yaml:/etc/grafana/provisioning/dashboards/main.yaml
    - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
  loki:
    command: -config.file=/etc/loki/loki-config.yml
    container_name: loki
    image: grafana/loki:latest
    labels:
    - log_job=loki
    networks:
    - monitoring
    ports:
    - 3100:3100
    user: root
    volumes:
    - ./config/loki/loki.yaml:/etc/loki/loki-config.yml
    - ./config/loki/loki-rules.yaml:/loki/rules/loki_rules.yaml
  node-exporter:
    command:
    - --path.procfs=/host/proc
    - --path.sysfs=/host/sys
    - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
    container_name: node-exporter
    image: prom/node-exporter:latest
    labels:
    - log_job=node-exporter
    networks:
    - monitoring
    ports:
    - 9100:9100
    user: root
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
  prometheus:
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/usr/share/prometheus/console_libraries
    - --web.console.templates=/usr/share/prometheus/consoles
    container_name: prometheus
    image: prom/prometheus:latest
    labels:
    - log_job=prometheus
    networks:
    - monitoring
    ports:
    - 9090:9090
    user: root
    volumes:
    - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    - ./config/prometheus/rules:/etc/prometheus/rules
    - prometheus-data:/prometheus
  promtail:
    command: -config.file=/etc/promtail/promtail-config.yml
    container_name: promtail
    image: grafana/promtail:latest
    labels:
    - log_job=promtail
    networks:
    - monitoring
    user: root
    volumes:
    - /var/log:/var/log
    - ./config/promtail/promtail.yaml:/etc/promtail/promtail-config.yml
    - /var/lib/docker/containers:/var/lib/docker/containers:ro
    - /var/run/docker.sock:/var/run/docker.sock:ro
version: '3'
volumes:
  grafana-storage: null
  prometheus-data: null

networks:
  monitoring: